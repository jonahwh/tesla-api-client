/*
 * Tesla JSON API
 * API for controlling Tesla vehicles
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.jonahwh.tesla_api_client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * RemoteSeatCoolerRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-05-22T21:54:48.185-07:00[America/Los_Angeles]")
public class RemoteSeatCoolerRequest {
  /**
   * The desired seat to adjust the cooler for.  SeatHeaterFrontLeft: 0, SeatHeaterFrontRight: 1, SeatHeaterRearLeft: 2, SeatHeaterRearLeftBack: 3, SeatHeaterRearCenter: 4, SeatHeaterRearRight: 5, SeatHeaterRearRightBack: 6, SeatHeater3rdRowLeft: 7, SeatHeater3rdRowRight: 8
   */
  @JsonAdapter(SeatPositionEnum.Adapter.class)
  public enum SeatPositionEnum {
    NUMBER_0(0),
    NUMBER_1(1),
    NUMBER_2(2),
    NUMBER_3(3),
    NUMBER_4(4),
    NUMBER_5(5),
    NUMBER_6(6),
    NUMBER_7(7),
    NUMBER_8(8);

    private Integer value;

    SeatPositionEnum(Integer value) {
      this.value = value;
    }
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static SeatPositionEnum fromValue(Integer input) {
      for (SeatPositionEnum b : SeatPositionEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<SeatPositionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SeatPositionEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public SeatPositionEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextInt();
        return SeatPositionEnum.fromValue((Integer)(value));
      }
    }
  }  @SerializedName("seat_position")
  private SeatPositionEnum seatPosition = null;

  /**
   * Seat cooler level
   */
  @JsonAdapter(SeatCoolerLevelEnum.Adapter.class)
  public enum SeatCoolerLevelEnum {
    NUMBER_1(1),
    NUMBER_2(2),
    NUMBER_3(3);

    private Integer value;

    SeatCoolerLevelEnum(Integer value) {
      this.value = value;
    }
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static SeatCoolerLevelEnum fromValue(Integer input) {
      for (SeatCoolerLevelEnum b : SeatCoolerLevelEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<SeatCoolerLevelEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SeatCoolerLevelEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public SeatCoolerLevelEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextInt();
        return SeatCoolerLevelEnum.fromValue((Integer)(value));
      }
    }
  }  @SerializedName("seat_cooler_level")
  private SeatCoolerLevelEnum seatCoolerLevel = null;

  public RemoteSeatCoolerRequest seatPosition(SeatPositionEnum seatPosition) {
    this.seatPosition = seatPosition;
    return this;
  }

   /**
   * The desired seat to adjust the cooler for.  SeatHeaterFrontLeft: 0, SeatHeaterFrontRight: 1, SeatHeaterRearLeft: 2, SeatHeaterRearLeftBack: 3, SeatHeaterRearCenter: 4, SeatHeaterRearRight: 5, SeatHeaterRearRightBack: 6, SeatHeater3rdRowLeft: 7, SeatHeater3rdRowRight: 8
   * @return seatPosition
  **/
  @Schema(description = "The desired seat to adjust the cooler for.  SeatHeaterFrontLeft: 0, SeatHeaterFrontRight: 1, SeatHeaterRearLeft: 2, SeatHeaterRearLeftBack: 3, SeatHeaterRearCenter: 4, SeatHeaterRearRight: 5, SeatHeaterRearRightBack: 6, SeatHeater3rdRowLeft: 7, SeatHeater3rdRowRight: 8")
  public SeatPositionEnum getSeatPosition() {
    return seatPosition;
  }

  public void setSeatPosition(SeatPositionEnum seatPosition) {
    this.seatPosition = seatPosition;
  }

  public RemoteSeatCoolerRequest seatCoolerLevel(SeatCoolerLevelEnum seatCoolerLevel) {
    this.seatCoolerLevel = seatCoolerLevel;
    return this;
  }

   /**
   * Seat cooler level
   * @return seatCoolerLevel
  **/
  @Schema(description = "Seat cooler level")
  public SeatCoolerLevelEnum getSeatCoolerLevel() {
    return seatCoolerLevel;
  }

  public void setSeatCoolerLevel(SeatCoolerLevelEnum seatCoolerLevel) {
    this.seatCoolerLevel = seatCoolerLevel;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RemoteSeatCoolerRequest remoteSeatCoolerRequest = (RemoteSeatCoolerRequest) o;
    return Objects.equals(this.seatPosition, remoteSeatCoolerRequest.seatPosition) &&
        Objects.equals(this.seatCoolerLevel, remoteSeatCoolerRequest.seatCoolerLevel);
  }

  @Override
  public int hashCode() {
    return Objects.hash(seatPosition, seatCoolerLevel);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RemoteSeatCoolerRequest {\n");
    
    sb.append("    seatPosition: ").append(toIndentedString(seatPosition)).append("\n");
    sb.append("    seatCoolerLevel: ").append(toIndentedString(seatCoolerLevel)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
